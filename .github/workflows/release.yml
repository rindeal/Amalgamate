name: Release

permissions:
  contents: write

on:
  push:
    tags:
    - 'v*.*.*'

jobs:
  draft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - name: Create draft release
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        run: >
          gh release create "${{ github.ref_name }}"
          --title "amalgamate ${{ github.ref_name }}"
          --draft
          --generate-notes
          --verify-tag

  source:
    needs: [ draft ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - name: Initialize environment
        run: echo archives= "amalgamate-${{ github.ref_name }}-source-code."{zip,tar.gz} >> "${GITHUB_ENV}"

      - name: Create assets
        run: printf "%s\n" ${archives} | xargs --verbose --max-args=1 pipx run git-archive-all --verbose | grep -v /3rd/

      - name: Upload assets
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        run: gh release upload --clobber "${{ github.ref_name }}" ${archives}

  linux_macos:
    needs: [ draft ]
    strategy: { matrix: { os: [ ubuntu-latest, macos-13, macos-14 ] } }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }
      
      - name: Build
        run: make

      - name: Create and upload assets
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        run: make gh-upload REL_VER="${{ github.ref_name }}" GH_TAG="${{ github.ref_name }}"

  windows:
    needs: [ draft ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }
      - uses: ilammy/msvc-dev-cmd@v1
      
      - name: Initialize environment
        run: Add-Content "${env:GITHUB_ENV}" "archive=amalgamate-${{ github.ref_name }}-windows-amd64.zip"

      - name: Build
        run: ./build.bat

      - name: Create assets
        run: Compress-Archive -verbose -Path "amalgamate.exe", "README.md", "LICENSE" -DestinationPath "${env:archive}"

      - name: Upload assets
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        run: gh release upload --clobber "${{ github.ref_name }}" "${env:archive}"
  
  finish:
    needs: [ linux_macos, windows, source ]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
      AUTOGEN_RELNOTES_PATH: "${{github.workspace}}/autogen-release-notes.md"
      RELNOTES_PATH: "${{github.workspace}}/relnotes.md"
      ASSETS_DIR_PATH: "${{github.workspace}}/assets"
      CHECKSUM_PATH: "${{github.workspace}}/sha256sum.txt"
    steps:
      - name: Download automatically generated release notes
        run: gh release view --json body --jq .body "${{ github.ref_name }}" > "${AUTOGEN_RELNOTES_PATH}"
      - name: Download assets
        run: gh release download --dir "${ASSETS_DIR_PATH}" "${{ github.ref_name }}"
      - name: Generate checksum file
        run: |
          set -ex
          cd "${ASSETS_DIR_PATH}"
          sha256sum * > "${CHECKSUM_PATH}"
      - name: Upload checksum file
        run: gh release upload --clobber "${{ github.ref_name }}" "${CHECKSUM_PATH}"
      - name: "Relnotes: init"
        run: |
          set -ex
          br(){ echo "" >> "${RELNOTES_PATH}";}
          echo "# Foo" >> "${RELNOTES_PATH}"
          br
          echo "**bar** _baz_" >> "${RELNOTES_PATH}"
          br
      - name: "Relnotes: checksum section"
        run: |
          set -ex
          br(){ echo "" >> "${RELNOTES_PATH}";}
          echo "<details>" >> "${RELNOTES_PATH}"
          echo "<summary>" >> "${RELNOTES_PATH}"
          echo "<b>Checksums</b> <sub><sup>(click here to toggle section visibility)</sup></sub>" >> "${RELNOTES_PATH}"
          echo "</summary>" >> "${RELNOTES_PATH}"
          br
          echo "Verify donwloaded files using this command:" >> "${RELNOTES_PATH}"
          echo '```sh' >> "${RELNOTES_PATH}"
          echo 'sha256sum --check --ignore-missing '"$(basename "${CHECKSUM_PATH}")" >> "${RELNOTES_PATH}"
          echo '```' >> "${RELNOTES_PATH}"
          br
          echo "Or directly using a checksum value from the table below like this:" >> "${RELNOTES_PATH}"
          echo '```sh' >> "${RELNOTES_PATH}"
          echo 'echo $HASH $FILE | sha256sum --check -' >> "${RELNOTES_PATH}"
          echo '```' >> "${RELNOTES_PATH}"
          br
          echo "File | SHA-256" >> "${RELNOTES_PATH}"
          echo "--- | ---" >> "${RELNOTES_PATH}"
          awk '{print $2, "|", $1}' < "${CHECKSUM_PATH}" >> "${RELNOTES_PATH}"
          br
          echo "</details>" >> "${RELNOTES_PATH}"
          br
      - name: "Relnotes: append auto notes"
        run: cat "${AUTOGEN_RELNOTES_PATH}" >> "${RELNOTES_PATH}"
      - name: Finish release
        run: gh release edit --draft=false --notes-file "${RELNOTES_PATH}" "${{ github.ref_name }}"
